{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\dev\\\\artifice\\\\client\\\\src\\\\game.js\";\nimport React, { Component } from 'react';\nimport Players from './components/players';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: 'John',\n      allPlayers: []\n    };\n  }\n  connectToParty(username, partyID) {\n    let ws = new WebSocket(\"ws://localhost:8000\");\n    ws.onopen = () => {\n      console.log(\"websocket client connected\");\n    };\n    ws.onmessage = message => {\n      const response = JSON.parse(message.data);\n\n      // Connected to server\n      if (response.method === \"connect\") {\n        this.setState({\n          clientID: response.clientID\n        });\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Players, {\n        allPlayers: this.state.allPlayers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Game;","map":{"version":3,"names":["React","Component","Players","Game","constructor","state","username","allPlayers","connectToParty","partyID","ws","WebSocket","onopen","console","log","onmessage","message","response","JSON","parse","data","method","setState","clientID","render"],"sources":["C:/Users/rober/dev/artifice/client/src/game.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Players from './components/players';\r\n\r\nclass Game extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: 'John',\r\n            allPlayers: []\r\n        }\r\n    }\r\n\r\n    connectToParty(username, partyID) {\r\n        let ws = new WebSocket(\"ws://localhost:8000\");\r\n\r\n        ws.onopen = () => {\r\n            console.log(\"websocket client connected\");\r\n        };\r\n\r\n        ws.onmessage = message => {\r\n            const response = JSON.parse(message.data);\r\n\r\n            // Connected to server\r\n            if(response.method === \"connect\") {\r\n                this.setState({\r\n                    clientID: response.clientID\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.username}</h1>\r\n                <Players allPlayers={this.state.allPlayers}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Game;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAAC;AAE3C,MAAMC,IAAI,SAASF,SAAS,CAAC;EACzBG,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACTC,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE;IAChB,CAAC;EACL;EAEAC,cAAc,CAACF,QAAQ,EAAEG,OAAO,EAAE;IAC9B,IAAIC,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAE7CD,EAAE,CAACE,MAAM,GAAG,MAAM;MACdC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC7C,CAAC;IAEDJ,EAAE,CAACK,SAAS,GAAGC,OAAO,IAAI;MACtB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;;MAEzC;MACA,IAAGH,QAAQ,CAACI,MAAM,KAAK,SAAS,EAAE;QAC9B,IAAI,CAACC,QAAQ,CAAC;UACVC,QAAQ,EAAEN,QAAQ,CAACM;QACvB,CAAC,CAAC;MACN;IACJ,CAAC;EACL;EAEAC,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA,UAAK,IAAI,CAACnB,KAAK,CAACC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9B,QAAC,OAAO;QAAC,UAAU,EAAE,IAAI,CAACD,KAAK,CAACE;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C;EAEd;AACJ;AAEA,eAAeJ,IAAI"},"metadata":{},"sourceType":"module"}