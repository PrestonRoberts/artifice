{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\dev\\\\artifice\\\\client\\\\src\\\\components\\\\players.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction handleRoleTarget(_roleTarget, method, voteTarget) {\n  _roleTarget(method, voteTarget);\n}\nfunction handleVote(_vote, voteTarget) {\n  _vote(voteTarget);\n}\nfunction playerStyle(props, player) {\n  let classes = 'player';\n  console.log('my boy is alive?' + player.username + +' ' + player.isDead);\n  if (player.isDead) {\n    classes += ' player-dead';\n  } else if (player.team === 'demon') {\n    classes += ' player-demon';\n  }\n  if (props.votedFor === player.username) {\n    classes += ' player-selected';\n  }\n  return classes;\n}\nfunction playerCardStyle(props, player) {\n  let classes = 'player-card';\n  if (props.votedFor === player.username) {\n    classes += ' player-card-selected';\n  } else if (player.isDead) {\n    classes += ' player-card-dead';\n  }\n  return classes;\n}\nfunction getVoteButton(props, player) {\n  if (!player.isDead && !props.playerInfo.isDead) {\n    if (props.phase === 'voting' && !player.isSelf) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: () => handleVote(props.vote, player.username),\n        children: \" Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    } else if (props.playerInfo.role === 'Psychic' && props.phase === 'night' && !player.isSelf) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: () => handleRoleTarget(props.roleTarget, 'psychic', player.username),\n        children: \" Soul Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    } else if (props.playerInfo.role === 'Demon' && props.phase === 'night' && !player.isSelf && player.team !== 'demon') {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: () => handleRoleTarget(props.roleTarget, 'demon', player.username),\n        children: \" Kill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    } else if (props.playerInfo.role === 'Doctor' && props.phase === 'night') {\n      if (player.isSelf && props.usedSelf) return;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: () => handleRoleTarget(props.roleTarget, 'doctor', player.username),\n        children: \" Heal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    }\n  }\n}\nfunction Players(props) {\n  const allPlayers = props.allPlayers;\n  const playerList = allPlayers.map((player, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: playerCardStyle(props, player),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: playerStyle(props, player),\n      children: i + 1 + \". \" + player.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), props.phase === 'voting' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"vote-count\",\n      children: [player.votes, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }, this) : '', getVoteButton(props, player)]\n  }, i + 1, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: playerList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_c = Players;\nexport default Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","handleRoleTarget","_roleTarget","method","voteTarget","handleVote","_vote","playerStyle","props","player","classes","console","log","username","isDead","team","votedFor","playerCardStyle","getVoteButton","playerInfo","phase","isSelf","vote","role","roleTarget","usedSelf","Players","allPlayers","playerList","map","i","votes"],"sources":["C:/Users/rober/dev/artifice/client/src/components/players.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction handleRoleTarget(_roleTarget, method, voteTarget) {\r\n    _roleTarget(method, voteTarget); \r\n}\r\n\r\nfunction handleVote(_vote, voteTarget) {\r\n    _vote(voteTarget);\r\n}\r\n\r\nfunction playerStyle(props, player) {\r\n    let classes = 'player'\r\n    console.log('my boy is alive?' + player.username + + ' ' + player.isDead)\r\n    if(player.isDead) {\r\n        classes += ' player-dead';\r\n    } else if (player.team=== 'demon') {\r\n        classes += ' player-demon';\r\n    }\r\n\r\n    if(props.votedFor === player.username) {\r\n        classes += ' player-selected'\r\n    }\r\n\r\n    return classes\r\n}\r\n\r\nfunction playerCardStyle(props, player) {\r\n    let classes ='player-card'\r\n    if(props.votedFor === player.username) {\r\n        classes += ' player-card-selected'\r\n    } else if(player.isDead) {\r\n        classes += ' player-card-dead'\r\n    }\r\n    return classes;\r\n}\r\n\r\nfunction getVoteButton(props, player) {\r\n    if(!player.isDead && !props.playerInfo.isDead) {\r\n        if(props.phase === 'voting' && !player.isSelf) {\r\n            return <button \r\n                        className='action-button'\r\n                        onClick={() => handleVote(props.vote, player.username)} \r\n                    > Vote\r\n                    </button>;\r\n        } else if(props.playerInfo.role === 'Psychic' && props.phase === 'night' && !player.isSelf) {\r\n            return <button \r\n                        className='action-button'\r\n                        onClick={() => handleRoleTarget(props.roleTarget, 'psychic', player.username)} \r\n                    > Soul Read\r\n                    </button>;\r\n        }\r\n\r\n        else if(props.playerInfo.role === 'Demon' && props.phase === 'night' && !player.isSelf && player.team !== 'demon') {\r\n            return <button \r\n                        className='action-button'\r\n                        onClick={() => handleRoleTarget(props.roleTarget, 'demon', player.username)} \r\n                    > Kill\r\n                    </button>;\r\n        }\r\n\r\n        else if(props.playerInfo.role === 'Doctor' && props.phase === 'night') {\r\n            if(player.isSelf && props.usedSelf) return;\r\n            return <button \r\n                        className='action-button'\r\n                        onClick={() => handleRoleTarget(props.roleTarget, 'doctor', player.username)} \r\n                    > Heal\r\n                    </button>;\r\n        }\r\n    }\r\n}\r\n\r\nfunction Players(props) {\r\n\r\n    const allPlayers = props.allPlayers\r\n    const playerList = allPlayers.map((player, i) =>\r\n        <div key={i+1} className={playerCardStyle(props, player)}>\r\n            <span className={playerStyle(props, player)}>{(i+1) + \". \" + player.username}</span>\r\n            {props.phase === 'voting' ? <span className='vote-count'>{player.votes} </span> : ''}\r\n            {getVoteButton(props, player)}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {playerList}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Players;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,gBAAgB,CAACC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAE;EACvDF,WAAW,CAACC,MAAM,EAAEC,UAAU,CAAC;AACnC;AAEA,SAASC,UAAU,CAACC,KAAK,EAAEF,UAAU,EAAE;EACnCE,KAAK,CAACF,UAAU,CAAC;AACrB;AAEA,SAASG,WAAW,CAACC,KAAK,EAAEC,MAAM,EAAE;EAChC,IAAIC,OAAO,GAAG,QAAQ;EACtBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGH,MAAM,CAACI,QAAQ,GAAG,CAAE,GAAG,GAAGJ,MAAM,CAACK,MAAM,CAAC;EACzE,IAAGL,MAAM,CAACK,MAAM,EAAE;IACdJ,OAAO,IAAI,cAAc;EAC7B,CAAC,MAAM,IAAID,MAAM,CAACM,IAAI,KAAI,OAAO,EAAE;IAC/BL,OAAO,IAAI,eAAe;EAC9B;EAEA,IAAGF,KAAK,CAACQ,QAAQ,KAAKP,MAAM,CAACI,QAAQ,EAAE;IACnCH,OAAO,IAAI,kBAAkB;EACjC;EAEA,OAAOA,OAAO;AAClB;AAEA,SAASO,eAAe,CAACT,KAAK,EAAEC,MAAM,EAAE;EACpC,IAAIC,OAAO,GAAE,aAAa;EAC1B,IAAGF,KAAK,CAACQ,QAAQ,KAAKP,MAAM,CAACI,QAAQ,EAAE;IACnCH,OAAO,IAAI,uBAAuB;EACtC,CAAC,MAAM,IAAGD,MAAM,CAACK,MAAM,EAAE;IACrBJ,OAAO,IAAI,mBAAmB;EAClC;EACA,OAAOA,OAAO;AAClB;AAEA,SAASQ,aAAa,CAACV,KAAK,EAAEC,MAAM,EAAE;EAClC,IAAG,CAACA,MAAM,CAACK,MAAM,IAAI,CAACN,KAAK,CAACW,UAAU,CAACL,MAAM,EAAE;IAC3C,IAAGN,KAAK,CAACY,KAAK,KAAK,QAAQ,IAAI,CAACX,MAAM,CAACY,MAAM,EAAE;MAC3C,oBAAO;QACK,SAAS,EAAC,eAAe;QACzB,OAAO,EAAE,MAAMhB,UAAU,CAACG,KAAK,CAACc,IAAI,EAAEb,MAAM,CAACI,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAElD;IACrB,CAAC,MAAM,IAAGL,KAAK,CAACW,UAAU,CAACI,IAAI,KAAK,SAAS,IAAIf,KAAK,CAACY,KAAK,KAAK,OAAO,IAAI,CAACX,MAAM,CAACY,MAAM,EAAE;MACxF,oBAAO;QACK,SAAS,EAAC,eAAe;QACzB,OAAO,EAAE,MAAMpB,gBAAgB,CAACO,KAAK,CAACgB,UAAU,EAAE,SAAS,EAAEf,MAAM,CAACI,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEzE;IACrB,CAAC,MAEI,IAAGL,KAAK,CAACW,UAAU,CAACI,IAAI,KAAK,OAAO,IAAIf,KAAK,CAACY,KAAK,KAAK,OAAO,IAAI,CAACX,MAAM,CAACY,MAAM,IAAIZ,MAAM,CAACM,IAAI,KAAK,OAAO,EAAE;MAC/G,oBAAO;QACK,SAAS,EAAC,eAAe;QACzB,OAAO,EAAE,MAAMd,gBAAgB,CAACO,KAAK,CAACgB,UAAU,EAAE,OAAO,EAAEf,MAAM,CAACI,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvE;IACrB,CAAC,MAEI,IAAGL,KAAK,CAACW,UAAU,CAACI,IAAI,KAAK,QAAQ,IAAIf,KAAK,CAACY,KAAK,KAAK,OAAO,EAAE;MACnE,IAAGX,MAAM,CAACY,MAAM,IAAIb,KAAK,CAACiB,QAAQ,EAAE;MACpC,oBAAO;QACK,SAAS,EAAC,eAAe;QACzB,OAAO,EAAE,MAAMxB,gBAAgB,CAACO,KAAK,CAACgB,UAAU,EAAE,QAAQ,EAAEf,MAAM,CAACI,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAExE;IACrB;EACJ;AACJ;AAEA,SAASa,OAAO,CAAClB,KAAK,EAAE;EAEpB,MAAMmB,UAAU,GAAGnB,KAAK,CAACmB,UAAU;EACnC,MAAMC,UAAU,GAAGD,UAAU,CAACE,GAAG,CAAC,CAACpB,MAAM,EAAEqB,CAAC,kBACxC;IAAe,SAAS,EAAEb,eAAe,CAACT,KAAK,EAAEC,MAAM,CAAE;IAAA,wBACrD;MAAM,SAAS,EAAEF,WAAW,CAACC,KAAK,EAAEC,MAAM,CAAE;MAAA,UAAGqB,CAAC,GAAC,CAAC,GAAI,IAAI,GAAGrB,MAAM,CAACI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAQ,EACnFL,KAAK,CAACY,KAAK,KAAK,QAAQ,gBAAG;MAAM,SAAS,EAAC,YAAY;MAAA,WAAEX,MAAM,CAACsB,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS,GAAG,EAAE,EACnFb,aAAa,CAACV,KAAK,EAAEC,MAAM,CAAC;EAAA,GAHvBqB,CAAC,GAAC,CAAC;IAAA;IAAA;IAAA;EAAA,QAIP,CACT;EAED,oBACI;IAAA,UACKF;EAAU;IAAA;IAAA;IAAA;EAAA,QACT;AAEd;AAAC,KAhBQF,OAAO;AAkBhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}