{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\dev\\\\artifice\\\\client\\\\src\\\\components\\\\createParty.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CreateParty extends React.Component {\n  constructor(props) {\n    super(props);\n    this.errorMsgStyle = {\n      margin: 0,\n      color: 'red'\n    };\n    this.state = {\n      username: '',\n      errorMsg: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  createParty(_joinGame) {\n    let inputName = this.state.username.trim();\n    if (inputName === '') {\n      this.setState({\n        errorMsg: \"username is required\"\n      });\n      return;\n    }\n    let letterNumber = /^[0-9a-zA-Z]+$/;\n    if (!inputName.match(letterNumber)) {\n      this.setState({\n        errorMsg: \"username can only be letters and numbers\"\n      });\n      return;\n    }\n    if (inputName.length > 15) {\n      this.setState({\n        errorMsg: \"username must be less than 15 characters\"\n      });\n      return;\n    }\n    let isHost = true;\n    _joinGame({\n      type: 'none'\n    }, isHost, inputName, '');\n  }\n  handleInputChange(event) {\n    this.setState({\n      username: event.target.value,\n      errorMsg: ''\n    });\n  }\n  render() {\n    let inputError = '';\n    if (this.state.errorMsg !== '') {\n      inputError = /*#__PURE__*/_jsxDEV(\"p\", {\n        style: this.errorMsgStyle,\n        children: this.state.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleInputChange,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), inputError, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"home-button\",\n        onClick: () => this.createParty(this.props.joinGame),\n        children: \"Create Party\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"home-button\",\n        onClick: this.props.backClick,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CreateParty;","map":{"version":3,"names":["React","CreateParty","Component","constructor","props","errorMsgStyle","margin","color","state","username","errorMsg","handleInputChange","bind","createParty","_joinGame","inputName","trim","setState","letterNumber","match","length","isHost","type","event","target","value","render","inputError","joinGame","backClick"],"sources":["C:/Users/rober/dev/artifice/client/src/components/createParty.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nclass CreateParty extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            errorMsg: ''\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    errorMsgStyle = {\r\n        margin: 0,\r\n        color: 'red'\r\n    }\r\n\r\n    createParty(_joinGame) {\r\n        let inputName = this.state.username.trim();\r\n        if(inputName === '') {\r\n            this.setState({errorMsg: \"username is required\"});\r\n            return;\r\n        }\r\n\r\n        let letterNumber = /^[0-9a-zA-Z]+$/;\r\n        if(!(inputName.match(letterNumber))) {\r\n            this.setState({errorMsg: \"username can only be letters and numbers\"});\r\n            return;\r\n        }\r\n\r\n        if(inputName.length > 15) {\r\n            this.setState({errorMsg: \"username must be less than 15 characters\"});\r\n            return;\r\n        }\r\n        \r\n        let isHost = true;\r\n        _joinGame({type: 'none'}, isHost, inputName, '');\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.setState({\r\n            username: event.target.value,\r\n            errorMsg: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let inputError = '';\r\n        if (this.state.errorMsg !== '') {\r\n            inputError = <p style={this.errorMsgStyle}>{this.state.errorMsg}</p>\r\n        }\r\n        return (\r\n            <div>\r\n                <label>\r\n                    Name:\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"username\" \r\n                        value={this.state.username} \r\n                        onChange={this.handleInputChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label> \r\n                \r\n                <br/>\r\n\r\n                {inputError}\r\n\r\n                <button className='home-button' onClick={() => this.createParty(this.props.joinGame)}>Create Party</button> \r\n                \r\n                <br/>\r\n\r\n                <button className='home-button' onClick={this.props.backClick}>Back</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateParty;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,WAAW,SAASD,KAAK,CAACE,SAAS,CAAC;EACtCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAUjBC,aAAa,GAAG;MACZC,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE;IACX,CAAC;IAXG,IAAI,CAACC,KAAK,GAAG;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd,CAAC;IAED,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;EAC9D;EAOAC,WAAW,CAACC,SAAS,EAAE;IACnB,IAAIC,SAAS,GAAG,IAAI,CAACP,KAAK,CAACC,QAAQ,CAACO,IAAI,EAAE;IAC1C,IAAGD,SAAS,KAAK,EAAE,EAAE;MACjB,IAAI,CAACE,QAAQ,CAAC;QAACP,QAAQ,EAAE;MAAsB,CAAC,CAAC;MACjD;IACJ;IAEA,IAAIQ,YAAY,GAAG,gBAAgB;IACnC,IAAG,CAAEH,SAAS,CAACI,KAAK,CAACD,YAAY,CAAE,EAAE;MACjC,IAAI,CAACD,QAAQ,CAAC;QAACP,QAAQ,EAAE;MAA0C,CAAC,CAAC;MACrE;IACJ;IAEA,IAAGK,SAAS,CAACK,MAAM,GAAG,EAAE,EAAE;MACtB,IAAI,CAACH,QAAQ,CAAC;QAACP,QAAQ,EAAE;MAA0C,CAAC,CAAC;MACrE;IACJ;IAEA,IAAIW,MAAM,GAAG,IAAI;IACjBP,SAAS,CAAC;MAACQ,IAAI,EAAE;IAAM,CAAC,EAAED,MAAM,EAAEN,SAAS,EAAE,EAAE,CAAC;EACpD;EAEAJ,iBAAiB,CAACY,KAAK,EAAE;IACrB,IAAI,CAACN,QAAQ,CAAC;MACVR,QAAQ,EAAEc,KAAK,CAACC,MAAM,CAACC,KAAK;MAC5Bf,QAAQ,EAAE;IACd,CAAC,CAAC;EACN;EAEAgB,MAAM,GAAG;IACL,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAI,IAAI,CAACnB,KAAK,CAACE,QAAQ,KAAK,EAAE,EAAE;MAC5BiB,UAAU,gBAAG;QAAG,KAAK,EAAE,IAAI,CAACtB,aAAc;QAAA,UAAE,IAAI,CAACG,KAAK,CAACE;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK;IACxE;IACA,oBACI;MAAA,wBACI;QAAA,iCAEI;UACI,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,UAAU;UACf,KAAK,EAAE,IAAI,CAACF,KAAK,CAACC,QAAS;UAC3B,QAAQ,EAAE,IAAI,CAACE,iBAAkB;UACjC,YAAY,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QACpB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eAER;QAAA;QAAA;QAAA;MAAA,QAAK,EAEJgB,UAAU,eAEX;QAAQ,SAAS,EAAC,aAAa;QAAC,OAAO,EAAE,MAAM,IAAI,CAACd,WAAW,CAAC,IAAI,CAACT,KAAK,CAACwB,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eAE3G;QAAA;QAAA;QAAA;MAAA,QAAK,eAEL;QAAQ,SAAS,EAAC,aAAa;QAAC,OAAO,EAAE,IAAI,CAACxB,KAAK,CAACyB,SAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1E;EAEd;AACJ;AAEA,eAAe5B,WAAW"},"metadata":{},"sourceType":"module"}